@model ExpensesViewModel
@{
    ViewData["Title"] = "Expenses List";
    var bedetails = ViewData["bedetails"] as Dictionary<int, string>;
}

<div class="container mt-3">
    <h2 class="h4">Expenses List</h2>

    <!-- Search Form -->
    <form asp-action="Index" method="get" class="mb-3">
        <div class="input-group">
            <input type="text" name="searchString" class="form-control" placeholder="Search by Name, BE No, Bill Type, or Amount" value="@Model.SearchString" />
            <button class="btn btn-outline-secondary" type="submit">Search</button>

            <!-- Create New Expense Button with margin for spacing -->
            <a asp-action="upsert" class="btn btn-outline-secondary ms-2">Create</a>
        </div>
    </form>

    <!-- Display Search Filter Information -->
    @if (!string.IsNullOrWhiteSpace(Model.SearchString))
    {
        <div class="alert alert-info">
            <strong>Current Filter:</strong> @Html.DisplayFor(m => m.SearchString)
        </div>
    }

    <!-- Expenses Table -->
    <table class="table table-sm table-hover table-bordered">
        <thead class="thead-light">
            <tr>
                <th class="text-left">Employee Name</th>
                <th class="text-center">Date</th>
                <th class="text-center">BE No</th>
                <th class="text-center">Bill No</th>
                <th class="text-center">Bill Type</th>
                <th class="text-center">Bill Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in Model.Expenses)
            {
                <tr>
                    <td class="text-left">@expense.Employee.Name</td>
                    <td class="text-center">@expense.BillDate.ToString("yyyy-MM-dd")</td> <!-- Format Bill Date -->
                    <td class="text-center">@expense.BEno</td>


                    <td class="text-center">@expense.FileNo</td>
                    <td class="text-center">@expense.BillType</td>
                    <td class="text-center">
                        <!-- Link total amount to the Details action for this Expense -->
                        <a asp-action="Details" asp-route-id="@expense.Id" class="text-decoration-none text-end d-block">
                            @String.Format("{0:N}", expense.Amount)
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination Controls -->
    <nav>
        <ul class="pagination pagination-sm justify-content-end">
            @if (Model.PageNumber > 1)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-pageNumber="1" asp-route-searchString="@Model.SearchString" class="page-link">First</a>
                </li>
                <li class="page-item">
                    <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-searchString="@Model.SearchString" class="page-link">&lt;</a>
                </li>
            }

            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a asp-action="Index" asp-route-pageNumber="@i" asp-route-searchString="@Model.SearchString" class="page-link">@i</a>
                </li>
            }

            @if (Model.PageNumber < Model.TotalPages)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-searchString="@Model.SearchString" class="page-link">&gt;</a>
                </li>
            }

            @if (Model.PageNumber < Model.TotalPages - 1)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-pageNumber="@Model.TotalPages" asp-route-searchString="@Model.SearchString" class="page-link">Last</a>
                </li>
            }
        </ul>
    </nav>
</div>
